<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--开启aop切面编程代理-->
    <aop:aspectj-autoproxy/>
    <!--支持上下文使用注解方式, 并且自动扫描管理com.credi包下的bean-->
    <context:component-scan base-package="com.credi"/>
    <!--定时任务驱动-->
    <task:annotation-driven />

    <!--c3p0数据源配置 , 加载db.properties的信息-->
    <context:property-placeholder location="db.properties" />
    <!-- 配置 c3p0 数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- jdbcTemplate 配置 , jdbcTemplate是模板类对象. -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- jdbc事务xml 配置 ,为了使用DataSourceTransactionManager，需要使用如下的 XML 将其装配到应用程序的上下文定义中 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- jdbc事务管理器定义 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--2 . 以下标签,使用注解进行事务操作才使用-->
    <!--<tx:annotation-driven transaction-manager="txManager"/>-->

    <!-- 以下个标签 , 只有xml配置进行事务操作才使用 -->
    <!--拦截哪些方法-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!--匹配以 save 开头的 service 方法均加入事物-->
            <tx:method name="save*" propagation="REQUIRED" />
            <!--匹配以 del 开头的 service 方法均加入事物-->
            <tx:method name="del*" propagation="REQUIRED" />
            <!--匹配以 update 开头的 service 方法均加入事物-->
            <tx:method name="update*" propagation="REQUIRED" />
            <!--匹配以 query 开头的 service 方法事物为只读模式-->
            <tx:method name="query*" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!-- aop 切面定义 ,拦截哪些类 -->
    <aop:config>
        <aop:pointcut expression="execution( * com.credi..*.*(..) )" id="cut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
    </aop:config>


</beans>